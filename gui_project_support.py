#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 19, 2020 05:02:54 PM +0200  platform: Windows NT

import sys
import common
import threading
from threading import Thread
import server_big_project
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def lock_button(p1):
    common.task_command = "lock_screen"
    # lock_thread = threading.Thread(target=server_big_project.command_click(), args=())
    # lock_thread.start()
    # sys.stdout.flush()
    common.conn_q.put("lock")

def select_all_clients(p1):
    common.send_all = True
    sys.stdout.flush()

def send_file(p1):
    print('gui_project_support.send_file')
    # sys.stdout.flush()

def start_share_screen(p1):
    common.task_command = "send_screen"
    share_thread = threading.Thread(target=server_big_project.command_click(), args=())
    share_thread.start()
    # server_big_project.command_click()
    sys.stdout.flush()

def stop_share_screen(p1):
    print('gui_project_support.stop_share_screen')
    sys.stdout.flush()

def turn_off(p1):
    print('gui_project_support.turn_off')
    sys.stdout.flush()

def turn_on(p1):
    print('gui_project_support.turn_on')
    sys.stdout.flush()

def unlock_button(p1):
    print('gui_project_support.unlock_button')
    sys.stdout.flush()

def update_client_list(p1):
    print('gui_project_support.update_client_list')
    sys.stdout.flush()

def watch_client(p1):
    print('gui_project_support.watch_client')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import server_big_project
    main_connected = threading.Thread(target=server_big_project.main(), args=())
    main_connected.start()
    import gui_project
    gui_project.vp_start_gui()




