#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 13, 2020 05:32:13 PM +0300  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import send_gui_support
from finals import Finals as final
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = ControlNet (root)
    send_gui_support.init(root, top)
    root.mainloop()

w = None
def create_ControlNet(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_ControlNet(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = ControlNet (w)
    send_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_ControlNet():
    global w
    w.destroy()
    w = None

class ControlNet:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("592x463+545+208")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(0, 1)
        top.title("ControlNet")
        top.configure(background="#53c7ff")
        top.configure(highlightbackground="#f0f0f0f0f0f0")
        top.configure(highlightcolor="black")

        self.label_upload = tk.Label(top)
        self.label_upload.place(relx=0.152, rely=0.324, height=42, width=398)
        self.label_upload.configure(activebackground="#f9f9f9")
        self.label_upload.configure(activeforeground="black")
        self.label_upload.configure(background="#53c7ff")
        self.label_upload.configure(borderwidth="0")
        self.label_upload.configure(disabledforeground="#a3a3a3")
        self.label_upload.configure(font="-family {Calibri} -size 20 -weight bold")
        self.label_upload.configure(foreground="#004182")
        self.label_upload.configure(highlightbackground="#d9d9d9")
        self.label_upload.configure(highlightcolor="black")
        self.label_upload.configure(text='''Send your file to the teacher:''')

        self.title = tk.Label(top)
        self.title.place(relx=0.321, rely=0.108, height=63, width=201)
        self.title.configure(activebackground="#f9f9f9")
        self.title.configure(activeforeground="black")
        self.title.configure(background="#53c7ff")
        self.title.configure(disabledforeground="#a3a3a3")
        self.title.configure(font="-family {Bodoni MT} -size 24 -weight bold -slant italic")
        self.title.configure(foreground="#000000")
        self.title.configure(highlightbackground="#d9d9d9")
        self.title.configure(highlightcolor="black")
        self.title.configure(text='''ControlNet''')

        self.label_name = tk.Label(top)
        self.label_name.place(relx=0.017, rely=0.022, height=41, width=494)
        self.label_name.configure(activebackground="#f9f9f9")
        self.label_name.configure(activeforeground="black")
        self.label_name.configure(anchor='nw')
        self.label_name.configure(background="#53c7ff")
        self.label_name.configure(disabledforeground="#a3a3a3")
        self.label_name.configure(font="-family {Calibri} -size 12 -weight bold")
        self.label_name.configure(foreground="#000000")
        self.label_name.configure(highlightbackground="#d9d9d9")
        self.label_name.configure(highlightcolor="black")
        self.label_name.configure(text='''Name:''')

        self.send_button = tk.Button(top)
        self.send_button.place(relx=0.355, rely=0.518, height=167, width=167)
        self.send_button.configure(activebackground="#aaaaaa")
        self.send_button.configure(activeforeground="#000000")
        self.send_button.configure(background="#d9d9d9")
        self.send_button.configure(cursor="hand2")
        self.send_button.configure(disabledforeground="#a3a3a3")
        self.send_button.configure(foreground="#000000")
        self.send_button.configure(highlightbackground="#d9d9d9")
        self.send_button.configure(highlightcolor="black")
        photo_location = final.first_setup_path + "\\fe_icon.png"
        # photo_location = os.path.join(prog_location,"./fe_icon.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.send_button.configure(image=_img0)
        self.send_button.configure(pady="0")
        self.send_button.configure(relief="ridge")
        self.send_button.bind('<Button-1>',lambda e:send_gui_support.upload_files(e))

if __name__ == '__main__':
    vp_start_gui()
