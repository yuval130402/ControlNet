#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 11, 2020 02:20:09 PM +0300  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_client_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = ControlNet (root)
    gui_client_support.init(root, top)
    root.mainloop()

w = None
def create_ControlNet(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_ControlNet(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = ControlNet (w)
    gui_client_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_ControlNet():
    global w
    w.destroy()
    w = None

class ControlNet:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+437+237")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1, 1)
        top.title("ControlNet")
        top.configure(background="#53c7ff")
        top.configure(highlightbackground="#f0f0f0f0f0f0")
        top.configure(highlightcolor="black")

        self.label_name = tk.Label(top)
        self.label_name.place(relx=0.083, rely=0.244, height=41, width=184)
        self.label_name.configure(activebackground="#f9f9f9")
        self.label_name.configure(activeforeground="black")
        self.label_name.configure(anchor='w')
        self.label_name.configure(background="#53c7ff")
        self.label_name.configure(borderwidth="0")
        self.label_name.configure(disabledforeground="#a3a3a3")
        self.label_name.configure(font="-family {Calibri} -size 16 -weight bold -slant italic")
        self.label_name.configure(foreground="#004182")
        self.label_name.configure(highlightbackground="#d9d9d9")
        self.label_name.configure(highlightcolor="black")
        self.label_name.configure(text='''Enter your name:''')

        self.student_name = tk.Entry(top)
        self.student_name.place(relx=0.083, rely=0.356, height=40
                , relwidth=0.657)
        self.student_name.configure(background="#ffffff")
        self.student_name.configure(disabledforeground="#a3a3a3")
        self.student_name.configure(font="-family {Calibri} -size 12")
        self.student_name.configure(foreground="#004182")
        self.student_name.configure(highlightbackground="#d9d9d9")
        self.student_name.configure(highlightcolor="black")
        self.student_name.configure(insertbackground="black")
        self.student_name.configure(relief="ridge")
        self.student_name.configure(selectbackground="#c4c4c4")
        self.student_name.configure(selectforeground="black")
        self.student_name.bind('<Key-Return>',lambda e:gui_client_support.on_pressed(e))

        self.start_button = tk.Button(top)
        self.start_button.place(relx=0.083, rely=0.578, height=44, width=127)
        self.start_button.configure(activebackground="#e0e0e0")
        self.start_button.configure(activeforeground="#000000")
        self.start_button.configure(background="#cecece")
        self.start_button.configure(cursor="hand2")
        self.start_button.configure(disabledforeground="#a3a3a3")
        self.start_button.configure(font="-family {Calibri} -size 12 -weight bold")
        self.start_button.configure(foreground="#000000")
        self.start_button.configure(highlightbackground="#d9d9d9")
        self.start_button.configure(highlightcolor="black")
        self.start_button.configure(pady="0")
        self.start_button.configure(text='''Get started...''')
        self.start_button.bind('<Button-1>',lambda e:gui_client_support.on_pressed(e))
        self.start_button.bind('<Enter>',lambda e:gui_client_support.over_on(e))
        self.start_button.bind('<Leave>',lambda e:gui_client_support.over_off(e))

        self.title = tk.Label(top)
        self.title.place(relx=0.083, rely=0.067, height=61, width=194)
        self.title.configure(activebackground="#f9f9f9")
        self.title.configure(activeforeground="black")
        self.title.configure(anchor='w')
        self.title.configure(background="#53c7ff")
        self.title.configure(disabledforeground="#a3a3a3")
        self.title.configure(font="-family {Bodoni MT} -size 24 -weight bold -slant italic")
        self.title.configure(foreground="#000000")
        self.title.configure(highlightbackground="#d9d9d9")
        self.title.configure(highlightcolor="black")
        self.title.configure(text='''ControlNet''')

        self.error_message = tk.Label(top)
        self.error_message.place(relx=0.083, rely=0.467, height=31, width=534)
        self.error_message.configure(activebackground="#f9f9f9")
        self.error_message.configure(activeforeground="black")
        self.error_message.configure(anchor='nw')
        self.error_message.configure(background="#53c7ff")
        self.error_message.configure(disabledforeground="#a3a3a3")
        self.error_message.configure(font="-family {Calibri} -size 12 -weight bold")
        self.error_message.configure(foreground="#fe2c31")
        self.error_message.configure(highlightbackground="#d9d9d9")
        self.error_message.configure(highlightcolor="black")
        self.error_message.configure(justify='left')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

if __name__ == '__main__':
    vp_start_gui()





